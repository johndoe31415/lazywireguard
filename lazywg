#!/usr/bin/python3
#	lazywireguard - Quick setup of Wireguard keys and routing table
#	Copyright (C) 2021-2022 Johannes Bauer
#
#	This file is part of lazywireguard.
#
#	lazywireguard is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	lazywireguard is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with lazywireguard; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
from FriendlyArgumentParser import FriendlyArgumentParser
from WireguardGenerator import WireguardGenerator

parser = FriendlyArgumentParser(description = "Easy WireGuard configuration file creation.")
parser.add_argument("-t", "--create-tar-gz", action = "store_true", help = "After creating all the files, also pack them up into a .tar.gz file for each host.")
parser.add_argument("-g", "--create-group-tar-gz", action = "store_true", help = "Similar like the option before, but instead of creating host-individual files, create a .tar.gz for each defined group that contains all configurations of that group.")
parser.add_argument("-o", "--output-dir", metavar = "path", help = "Specifies output directory to use. Defaults to the network domainname.")
parser.add_argument("-v", "--verbose", action = "count", default = 0, help = "Increases verbosity. Can be specified multiple times to increase.")
parser.add_argument("config_file", help = "JSON configuration file for VPN setup")
args = parser.parse_args(sys.argv[1:])

wggen = WireguardGenerator(args)
wggen.run()
